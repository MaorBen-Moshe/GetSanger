<?xml version="1.0" encoding="utf-8" ?>
<popup:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 xmlns:vm="clr-namespace:GetSanger.ViewModels"
                 xmlns:popup="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
                 xmlns:animation="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
                 xmlns:Converters="clr-namespace:GetSanger.Converters"
                 xmlns:controls="clr-namespace:GetSanger.Controls"
                 x:Class="GetSanger.Views.popups.ChangePasswordPage"
                 SystemPaddingSides="All">

    <popup:PopupPage.BindingContext>
        <vm:ChangePasswordViewModel />
    </popup:PopupPage.BindingContext>

    <popup:PopupPage.Resources>
        <ResourceDictionary>
            <Converters:PasswordEntryToBoolConverter x:Key="PasswordEntryToBoolConverter"/>
        </ResourceDictionary>
    </popup:PopupPage.Resources>

    <popup:PopupPage.Animation>
        <animation:ScaleAnimation PositionIn="Center"
                                  PositionOut="Center"
                                  ScaleIn="1.2"
                                  ScaleOut="0.8"
                                  DurationIn="400"
                                  DurationOut="300"
                                  EasingIn="SinOut"
                                  EasingOut="SinIn"
                                  HasBackgroundAnimation="True"/>
    </popup:PopupPage.Animation>
    <Frame HorizontalOptions="CenterAndExpand"
           VerticalOptions="CenterAndExpand"
           Padding="10"
           Margin="10">
        <StackLayout VerticalOptions="FillAndExpand"
                     HorizontalOptions="FillAndExpand"
                     Spacing="30"
                     Padding="20">
            <Label  Text="X" 
                    FontSize="Large"
                    FontAttributes="Bold"
                BackgroundColor="Transparent"
                HorizontalOptions="EndAndExpand" 
                VerticalOptions="StartAndExpand">
                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding ExitCommand}"/>
                </Label.GestureRecognizers>
            </Label>
            <Label Text="Change your password" 
                   FontSize="Large"
                   FontFamily="{StaticResource MontserratSemiBold}"
                   TextDecorations="Underline"
                   BackgroundColor="Transparent"
                   HorizontalTextAlignment="Center"/>
            <controls:VisibiltyPasswordControl PasswordPlaceHolder="Old password" 
                                               PasswordText="{Binding OldPassword, Mode=TwoWay}"
                                               x:Name="oldPassEntryControl">
            </controls:VisibiltyPasswordControl>
            <controls:VisibiltyPasswordControl PasswordPlaceHolder="New password" 
                                               PasswordText="{Binding NewPassword, Mode=TwoWay}" 
                                               x:Name="newPassEntryControl">
            </controls:VisibiltyPasswordControl>
            <controls:VisibiltyPasswordControl PasswordPlaceHolder="Confirm password" 
                                               PasswordText="{Binding ConfirmPassword, Mode=TwoWay}"
                                               x:Name="confirmPasswordEntryControl">
            </controls:VisibiltyPasswordControl>
            <Button Text="Change Password" 
                    Command="{Binding ChangePasswordCommand}" 
                    IsEnabled="{Binding IsEnabledsendBtn}"
                    HorizontalOptions="CenterAndExpand"
                    Margin="0,30,0,0"
                    VerticalOptions="EndAndExpand">
                <Button.Triggers>
                    <MultiTrigger TargetType="Button">
                        <MultiTrigger.Conditions>

                            <BindingCondition Binding="{Binding Source = {x:Reference oldPassEntryControl}, 
                                Path = PasswordEntry.Text, Converter={StaticResource PasswordEntryToBoolConverter}}" Value="True"/>

                            <BindingCondition Binding="{Binding Source = {x:Reference newPassEntryControl}, 
                                Path = PasswordEntry.Text, Converter={StaticResource PasswordEntryToBoolConverter}}" Value="True"/>

                            <BindingCondition Binding="{Binding Source = {x:Reference confirmPasswordEntryControl}, 
                                Path = PasswordEntry.Text, Converter={StaticResource PasswordEntryToBoolConverter}}" Value="True"/>

                        </MultiTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="True"/>
                    </MultiTrigger>
                </Button.Triggers>
            </Button>

        </StackLayout>
    </Frame>
</popup:PopupPage>